let _BaseNodeId = 0;
/**
 *
 *
 * @class BaseNode
 */
class BaseNode {
    /**
     * Creates an instance of BaseNode.
     * @memberof BaseNode
     */
    constructor() {
        this.x = 0; // absolute position
        this.y = 0; // absolute position
        this.parent = null;
        this.children = [];
        this.nodeType = 'base';
        this.attributes = {
            width: 0,
            height: 0,
            left: 0,
            top: 0,
            zIndex: 0,
            borderRadius: 0,
            backgroundColor: '#000000',
            padding: [0, 0, 0, 0],
            margin: [0, 0, 0, 0],
        };
        Object.defineProperty(this, 'id', { value: _BaseNodeId++ });
    }
    /**
     * copy this ndoe
     */
    copy() { }
    /**
     *
     *
     * @readonly
     * @memberof BaseNode
     */
    get width() {
        return this.attributes.width;
    }
    /**
     *
     *
     * @readonly
     * @memberof BaseNode
     */
    get height() {
        return this.attributes.height;
    }
    /**
     *
     *
     * @readonly
     * @memberof BaseNode
     */
    get left() {
        return this.attributes.left;
    }
    /**
     *
     *
     * @readonly
     * @memberof BaseNode
     */
    get top() {
        return this.attributes.top;
    }
    /**
     * addEventListener
     */
    addEventListener() { }
    /**
     *
     *
     * @memberof BaseNode
     */
    removeEventListener() { }
    /**
     * removeAllListeners
     */
    removeAllListeners() { }
    /**
     *
     *
     * @memberof BaseNode
     */
    attr() { }
    /**
     *
     *
     * @memberof BaseNode
     */
    removeAttribute() { }
    /**
     *
     *
     * @memberof BaseNode
     */
    append() { }
}

const renderUseCanvas = (layers) => {
};

/**
 *
 *
 * @export
 * @class App
 * @extends {BaseNode}
 */
class App extends BaseNode {
    /**
    * Creates an instance of App.
    * @param {ApplicationOptions} [options]
    * @param {number} [options.resolution]
    * The resolution / device pixel ratio of the renderer.
    * @memberof App
    */
    constructor(options) {
        super();
        this.root = null;
        this.layers = [];
        this._layersSortedByIndex = [];
        this.nodeType = 'APP';
    }
    mount(element) {
        this.root = element;
    }
    render() {
        renderUseCanvas(this._layersSortedByIndex);
    }
}

/**
 * box
 */
class Block extends BaseNode {
}

/**
 *
 *
 * @class Layer
 * @extends {BaseNode}
 */
class Layer extends BaseNode {
}

/**
 *
 *
 * @class Sprite
 */
class Sprite {
}

// @ts-ignore
window.Lion = {
    App,
    Layer,
    Block,
    Sprite,
};

export { App, Block, Layer, Sprite };
